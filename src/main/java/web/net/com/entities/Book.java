package web.net.com.entities;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Book generated by hbm2java
 */
@Entity
@Table(name = "book", catalog = "new_schema", uniqueConstraints = @UniqueConstraint(columnNames = "isbn"))
public class Book implements java.io.Serializable {

	private Long id;
	private Author author;
	private Genre genre;
	private Publisher publisher;
	private String name;
	private byte[] content;
	private int pageCount;
	private String isbn;
	private int publishYear;
	private byte[] image;
	private String descr;
	private Integer rating;
	private Long voteCount;
	private Set<Vote> votes = new HashSet<Vote>(0);

	public Book() {
	}

	public Book(Author author, Genre genre, Publisher publisher, String name, byte[] content, int pageCount,
			String isbn, int publishYear) {
		this.author = author;
		this.genre = genre;
		this.publisher = publisher;
		this.name = name;
		this.content = content;
		this.pageCount = pageCount;
		this.isbn = isbn;
		this.publishYear = publishYear;
	}

	public Book(Author author, Genre genre, Publisher publisher, String name, byte[] content, int pageCount,
			String isbn, int publishYear, byte[] image, String descr, Integer rating, Long voteCount, Set<Vote> votes) {
		this.author = author;
		this.genre = genre;
		this.publisher = publisher;
		this.name = name;
		this.content = content;
		this.pageCount = pageCount;
		this.isbn = isbn;
		this.publishYear = publishYear;
		this.image = image;
		this.descr = descr;
		this.rating = rating;
		this.voteCount = voteCount;
		this.votes = votes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id", nullable = false)
	public Author getAuthor() {
		return this.author;
	}

	public void setAuthor(Author author) {
		this.author = author;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "genre_id", nullable = false)
	public Genre getGenre() {
		return this.genre;
	}

	public void setGenre(Genre genre) {
		this.genre = genre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "publisher_id", nullable = false)
	public Publisher getPublisher() {
		return this.publisher;
	}

	public void setPublisher(Publisher publisher) {
		this.publisher = publisher;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "content", nullable = false)
	public byte[] getContent() {
		return this.content;
	}

	public void setContent(byte[] content) {
		this.content = content;
	}

	@Column(name = "page_count", nullable = false)
	public int getPageCount() {
		return this.pageCount;
	}

	public void setPageCount(int pageCount) {
		this.pageCount = pageCount;
	}

	@Column(name = "isbn", unique = true, nullable = false, length = 100)
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "publish_year", nullable = false)
	public int getPublishYear() {
		return this.publishYear;
	}

	public void setPublishYear(int publishYear) {
		this.publishYear = publishYear;
	}

	@Column(name = "image")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@Column(name = "descr", length = 5000)
	public String getDescr() {
		return this.descr;
	}

	public void setDescr(String descr) {
		this.descr = descr;
	}

	@Column(name = "rating")
	public Integer getRating() {
		return this.rating;
	}

	public void setRating(Integer rating) {
		this.rating = rating;
	}

	@Column(name = "vote_count")
	public Long getVoteCount() {
		return this.voteCount;
	}

	public void setVoteCount(Long voteCount) {
		this.voteCount = voteCount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "book")
	public Set<Vote> getVotes() {
		return this.votes;
	}

	public void setVotes(Set<Vote> votes) {
		this.votes = votes;
	}

}
